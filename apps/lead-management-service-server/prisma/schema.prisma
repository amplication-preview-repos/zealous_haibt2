datasource db {
  provider = "mongodb"
  url      = env("DB_URL")
}

generator client {
  provider = "prisma-client-js"
}

model Role {
  createdAt   DateTime @default(now())
  description String?
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  name        String?
  updatedAt   DateTime @updatedAt
  users       User[]
}

model Company {
  createdAt DateTime @default(now())
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  industry  String?
  leads     Lead[]
  name      String?
  updatedAt DateTime @updatedAt
  website   String?
}

model Lead {
  address     Address?   @relation(fields: [addressId], references: [id])
  addressId   String?    @db.ObjectId
  company     Company?   @relation(fields: [companyId], references: [id])
  companyId   String?    @db.ObjectId
  createdAt   DateTime   @default(now())
  email       String?
  firstName   String?
  id          String     @id @default(auto()) @map("_id") @db.ObjectId
  lastName    String?
  phoneNumber String?
  prospects   Prospect[]
  updatedAt   DateTime   @updatedAt
}

model Address {
  businesses Business[]
  city       String?
  country    String?
  createdAt  DateTime   @default(now())
  id         String     @id @default(auto()) @map("_id") @db.ObjectId
  leads      Lead[]
  postalCode String?
  state      String?
  street     String?
  updatedAt  DateTime   @updatedAt
}

model User {
  createdAt     DateTime       @default(now())
  email         String?        @unique
  firstName     String?
  id            String         @id @default(auto()) @map("_id") @db.ObjectId
  lastName      String?
  password      String
  prospects     Prospect[]
  role          Role?          @relation(fields: [roleId], references: [id])
  roleId        String?        @db.ObjectId
  roles         Json
  subscriptions Subscription[]
  updatedAt     DateTime       @updatedAt
  username      String         @unique
}

model Subscription {
  createdAt         DateTime @default(now())
  id                String   @id @default(auto()) @map("_id") @db.ObjectId
  subscriptionId    String?
  subscriptionLevel String?
  updatedAt         DateTime @updatedAt
  user              User?    @relation(fields: [userId], references: [id])
  userId            String?  @db.ObjectId
}

model Professional {
  business    Business?  @relation(fields: [businessId], references: [id])
  businessId  String?    @db.ObjectId
  createdAt   DateTime   @default(now())
  email       String?
  firstName   String?
  id          String     @id @default(auto()) @map("_id") @db.ObjectId
  lastName    String?
  phoneNumber String?
  prospects   Prospect[]
  updatedAt   DateTime   @updatedAt
}

model Business {
  address       Address?       @relation(fields: [addressId], references: [id])
  addressId     String?        @db.ObjectId
  createdAt     DateTime       @default(now())
  id            String         @id @default(auto()) @map("_id") @db.ObjectId
  industry      String?
  name          String?
  professionals Professional[]
  prospects     Prospect[]
  updatedAt     DateTime       @updatedAt
}

model Prospect {
  business       Business?              @relation(fields: [businessId], references: [id])
  businessId     String?                @db.ObjectId
  createdAt      DateTime               @default(now())
  id             String                 @id @default(auto()) @map("_id") @db.ObjectId
  lead           Lead?                  @relation(fields: [leadId], references: [id])
  leadId         String?                @db.ObjectId
  professional   Professional?          @relation(fields: [professionalId], references: [id])
  professionalId String?                @db.ObjectId
  taskList       EnumProspectTaskList[]
  updatedAt      DateTime               @updatedAt
  user           User?                  @relation(fields: [userId], references: [id])
  userId         String?                @db.ObjectId
}

model Task {
  assignedTo  String?
  createdAt   DateTime        @default(now())
  createdBy   String?
  description String?
  dueDate     DateTime?
  id          String          @id @default(auto()) @map("_id") @db.ObjectId
  status      EnumTaskStatus?
  taskTitle   String?
  updatedAt   DateTime        @updatedAt
}

model AnalyticsRole {
  createdAt DateTime @default(now())
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  updatedAt DateTime @updatedAt
}

model AnalyticsProfessional {
  createdAt DateTime @default(now())
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  updatedAt DateTime @updatedAt
}

model AnalyticsLead {
  createdAt DateTime @default(now())
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  updatedAt DateTime @updatedAt
}

model AnalyticsProspect {
  createdAt DateTime @default(now())
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  updatedAt DateTime @updatedAt
}

model AnalyticsUser {
  createdAt DateTime @default(now())
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  updatedAt DateTime @updatedAt
}

model AnalyticsCompany {
  createdAt DateTime @default(now())
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  updatedAt DateTime @updatedAt
}

model AnalyticsTask {
  createdAt DateTime @default(now())
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  updatedAt DateTime @updatedAt
}

model AnalyticsBusiness {
  createdAt DateTime @default(now())
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  updatedAt DateTime @updatedAt
}

model AnalyticsSubscription {
  createdAt DateTime @default(now())
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  updatedAt DateTime @updatedAt
}

model AnalyticsAddress {
  createdAt DateTime @default(now())
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  updatedAt DateTime @updatedAt
}

enum EnumProspectTaskList {
  Option1
}

enum EnumTaskStatus {
  Option1
}
