/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, AnalyticsRole as PrismaAnalyticsRole } from "@prisma/client";

export class AnalyticsRoleServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.AnalyticsRoleCountArgs, "select">
  ): Promise<number> {
    return this.prisma.analyticsRole.count(args);
  }

  async analyticsRoles(
    args: Prisma.AnalyticsRoleFindManyArgs
  ): Promise<PrismaAnalyticsRole[]> {
    return this.prisma.analyticsRole.findMany(args);
  }
  async analyticsRole(
    args: Prisma.AnalyticsRoleFindUniqueArgs
  ): Promise<PrismaAnalyticsRole | null> {
    return this.prisma.analyticsRole.findUnique(args);
  }
  async createAnalyticsRole(
    args: Prisma.AnalyticsRoleCreateArgs
  ): Promise<PrismaAnalyticsRole> {
    return this.prisma.analyticsRole.create(args);
  }
  async updateAnalyticsRole(
    args: Prisma.AnalyticsRoleUpdateArgs
  ): Promise<PrismaAnalyticsRole> {
    return this.prisma.analyticsRole.update(args);
  }
  async deleteAnalyticsRole(
    args: Prisma.AnalyticsRoleDeleteArgs
  ): Promise<PrismaAnalyticsRole> {
    return this.prisma.analyticsRole.delete(args);
  }
}
