/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import {
  Prisma,
  AnalyticsBusiness as PrismaAnalyticsBusiness,
} from "@prisma/client";

export class AnalyticsBusinessServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.AnalyticsBusinessCountArgs, "select">
  ): Promise<number> {
    return this.prisma.analyticsBusiness.count(args);
  }

  async analyticsBusinesses(
    args: Prisma.AnalyticsBusinessFindManyArgs
  ): Promise<PrismaAnalyticsBusiness[]> {
    return this.prisma.analyticsBusiness.findMany(args);
  }
  async analyticsBusiness(
    args: Prisma.AnalyticsBusinessFindUniqueArgs
  ): Promise<PrismaAnalyticsBusiness | null> {
    return this.prisma.analyticsBusiness.findUnique(args);
  }
  async createAnalyticsBusiness(
    args: Prisma.AnalyticsBusinessCreateArgs
  ): Promise<PrismaAnalyticsBusiness> {
    return this.prisma.analyticsBusiness.create(args);
  }
  async updateAnalyticsBusiness(
    args: Prisma.AnalyticsBusinessUpdateArgs
  ): Promise<PrismaAnalyticsBusiness> {
    return this.prisma.analyticsBusiness.update(args);
  }
  async deleteAnalyticsBusiness(
    args: Prisma.AnalyticsBusinessDeleteArgs
  ): Promise<PrismaAnalyticsBusiness> {
    return this.prisma.analyticsBusiness.delete(args);
  }
}
